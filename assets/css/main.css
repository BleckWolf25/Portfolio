/* ===================================== */
/* IMPORTS                  						 */
/* ===================================== */

@import 'tailwindcss';
@import '@nuxt/ui';

/* ===================================== */
/* BASE STYLES                 					 */
/* ===================================== */

html {
	scroll-behavior: smooth;
}

body {
	cursor: auto; /* Default cursor until custom cursor loads */
}

/* Hide cursor only when custom cursor system is active */
body[data-cursor-system='active'] {
	cursor: none;
}

/**
 * Base cursor styles
 * Note: Position and transform are handled by JavaScript for optimal performance
 */
.custom-cursor {
	/* Core positioning (handled by JS, but defined for fallback) */
	position: fixed;
	top: 0;
	left: 0;
	z-index: 9999;

	/* Size and appearance */
	width: 32px;
	height: 32px;
	background-size: cover;
	background-repeat: no-repeat;
	background-position: center;

	/* Performance optimizations */
	pointer-events: none;
	will-change: transform;
	backface-visibility: hidden;
	-webkit-backface-visibility: hidden;

	/* Smooth image transitions only (position handled by JS) */
	transition: background-image 0.2s cubic-bezier(0.4, 0, 0.2, 1),
		opacity 0.3s ease;
}

/**
 * Interactive state styles
 * Applied when hovering over interactive elements
 */
.custom-cursor.interactive {
	/* Visual feedback */
	filter: brightness(1.1);
}

/**
 * Cursor variants for different states
 * Use data attributes for cleaner state management
 */
.custom-cursor[data-state='loading'] {
	animation: cursor-pulse 1.5s ease-in-out infinite;
}

.custom-cursor[data-state='disabled'] {
	opacity: 0.5;
	filter: grayscale(100%);
}

/**
 * Animations for UX
 */
@keyframes cursor-pulse {
	0%,
	100% {
		transform: scale(1);
	}
	50% {
		transform: scale(1.1);
	}
}

/**
 * Accessibility and responsive considerations
 */

/* Respect user's motion preferences */
@media (prefers-reduced-motion: reduce) {
	.custom-cursor {
		transition: none;
		animation: none;
	}
}

/* Hide custom cursor on touch devices */
@media (hover: none) and (pointer: coarse) {
	.custom-cursor {
		display: none !important;
	}

	body {
		cursor: auto !important;
	}

	body * {
		cursor: auto !important;
	}
}

/* Cursor hiding for pointer devices */
@media (hover: hover) and (pointer: fine) {
	/* Only hide cursor when custom cursor system is active */
	body[data-cursor-system='active'] *,
	body[data-cursor-system='active'] .interactive {
		cursor: none !important;
	}

	/* Ensure interactive elements don't show default cursor */
	body[data-cursor-system='active'] a,
	body[data-cursor-system='active'] button,
	body[data-cursor-system='active'] [role='button'],
	body[data-cursor-system='active'] .interactive,
	body[data-cursor-system='active'] [data-cursor='interactive'] {
		cursor: none !important;
	}
}

/* ===================================== */
/* INTERACTIVE ELEMENT                   */
/* ===================================== */

/**
 * Optional: Add subtle visual feedback to interactive elements
 * when using custom cursor (remove if not desired)
 */
@media (hover: hover) and (pointer: fine) {
	body[data-cursor-system='active'] a:hover,
	body[data-cursor-system='active'] button:hover,
	body[data-cursor-system='active'] .interactive:hover {
		transform: translateY(-1px);
		transition: transform 0.2s ease;
	}
}

/* ===================================== */
/* FALLBACK STYLES                      */
/* ===================================== */

/**
 * Fallback styles when custom cursor fails to load
 * or on unsupported devices
 */
.custom-cursor[data-fallback='true'] {
	display: none;
}

body:not([data-cursor-system='active']) {
	cursor: auto;
}

body:not([data-cursor-system='active']) * {
	cursor: revert;
}
